apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.resourcePrefix }}console
  labels:
    app.service: {{ .Values.resourcePrefix }}console
spec:
  replicas: 1
  selector:
    matchLabels:
      app.service: {{ .Values.resourcePrefix }}console
  template:
    metadata:
      labels:
        app.service: {{ .Values.resourcePrefix }}console
    spec:
      containers:
      - env:
        {{ range $key, $value := .Values.environment }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{ end }}
        image: {{ .Values.docker.image.console }}
        imagePullPolicy: Always
        name: console
        resources:
          limits:
            memory: {{ .Values.resources.limits.memory.console }}
          requests:
            memory: {{ .Values.resources.requests.memory.console }}
        readinessProbe:
          exec:
            command:
            - app
            - state
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeMounts:
        {{- if not (eq "" (include "application.volumeMounts.console" .)) }}
        {{- include "application.volumeMounts.console" . | indent 8 }}
        {{- else }} []
        {{- end }}
      imagePullSecrets:
      - name: {{ .Values.resourcePrefix }}docker-config
      restartPolicy: Always
      volumes:
      {{- if not (eq "" (include "application.volumeMounts.console" .)) }}
      {{- include "application.volumes.console" . | indent 6 }}
      {{- else }} []
      {{- end }}
status: {}
