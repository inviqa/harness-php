
command('enable'):
  env:
    USE_DOCKER_SYNC:      = @('host.os') == 'darwin' and @('docker-sync') == 'yes' ? 'yes':'no'
    APP_BUILD:            = @('app.build')
    APP_MODE:             = @('app.mode')
    NAMESPACE:            = @('namespace')
    HAS_ASSETS:           = @('aws.bucket') !== null ? 'yes':'no'
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)
    source .my127ws/harness/scripts/enable.sh

command('disable'):
  env:
    USE_DOCKER_SYNC:      = (@('host.os') == 'darwin' and @('docker-sync') == 'yes') ? 'yes':'no'
    NAMESPACE:            = @('namespace')
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)
    source .my127ws/harness/scripts/disable.sh

command('destroy'):
  env:
    NAMESPACE:            = @('namespace')
    APP_BUILD:            = @('app.build')
    APP_VERSION:          = @('app.version')
    DOCKER_REPOSITORY:    = @('docker.repository')
    USE_DOCKER_SYNC:      = (@('host.os') == 'darwin' and @('docker-sync') == 'yes') ? 'yes':'no'
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    source .my127ws/harness/scripts/destroy.sh

command('exec %'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|=
    docker-compose exec -T -u build console ={ input.argument('%') }

command('console'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -u build console bash

command('db-console'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec console bash -c 'mysql -h"$DB_HOST" -u"$DB_USER" -p"$DB_PASS" "$DB_NAME"'

command('assets download'):
  env:
    AWS_ID:  =@('aws.id')
    AWS_KEY: =@('aws.key')
  exec: |
    #!bash(workspace:/)|@
    passthru ws.aws s3 sync @('assets.remote') @('assets.local')

command('assets upload'):
  env:
    AWS_ID:  =@('aws.id')
    AWS_KEY: =@('aws.key')
  exec: |
    #!bash(workspace:/)|@
    passthru ws.aws s3 sync @('assets.local') @('assets.remote')

command('frontend build'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -u build console bash -i -c 'app build:frontend'

command('frontend watch'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -u build console bash -i -c 'cd @('frontend.path'); @('frontend.watch')'

command('frontend console'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru docker-compose exec -u build console bash -i -c 'cd @('frontend.path'); bash'

command('port <service>'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|=
    passthru docker port $(docker-compose ps -q ={input.argument('service')})

command('service php-fpm restart'):
  env:
    COMPOSE_PROJECT_NAME: = @('namespace')
  exec: |
    #!bash(workspace:/)|@
    passthru ws install --step=prepare
    passthru "docker-compose exec console bash -c 'cp -r /.my127ws/docker/image/console/root/usr/local/etc/php/conf.d/* /usr/local/etc/php/conf.d/'"
    passthru "docker-compose exec php-fpm bash -c 'cp -r /.my127ws/docker/image/php-fpm/root/usr/local/etc/php/conf.d/* /usr/local/etc/php/conf.d/'"
    passthru docker-compose exec php-fpm supervisorctl restart php-fpm

command('toggle <attribute> <on_or_off>'):
  exec: |
    #!bash(workspace:/)|=
    export ATTRIBUTE="={input.argument('attribute')}"
    export YES_OR_NO="={input.argument('on_or_off') == 'on' ? 'yes': 'no'}"
    if grep -q "attribute('${ATTRIBUTE}'):" workspace.override.yml; then
      echo 'Removing old "${ATTRIBUTE}" setting from workspace.override.yml'
      sed -i '' -E "/^attribute\(\'${ATTRIBUTE}\'\): .*$/d" workspace.override.yml
    fi
    if grep -q "attribute('${ATTRIBUTE}'):" workspace.override.yml; then
      echo 'Could not remove line from workspace.override.yml, failing'
      exit 1
    fi
    echo "Setting '${ATTRIBUTE}' setting to '$YES_OR_NO' in workspace.override.yml"
    echo "attribute('${ATTRIBUTE}'): $YES_OR_NO" >> workspace.override.yml

command('xdebug <on_or_off>'):
  exec: |
    #!bash(workspace:/)|=
    ws toggle php.ext-xdebug.enable ={input.argument('on_or_off')}
    echo 'Updating templates in .my127ws/'
    run ws install --step=prepare
    echo 'Bringing up php-fpm with the new setting'
    run ws service php-fpm restart
    echo 'Done'

command('xdebug cli <on_or_off>'):
  exec: |
    #!bash(workspace:/)|=
    ws toggle php.ext-xdebug.cli.enable ={input.argument('on_or_off')}
    echo 'Updating templates in .my127ws/'
    run ws install --step=prepare
    echo 'Bringing up console with the new setting'
    run ws service php-fpm restart
    echo 'Done'
